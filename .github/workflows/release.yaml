name: Release on Tag

on:
  push:
    tags:
      - 'v*' # Trigger on tags like v1.0.0

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    container: ubuntu:rolling
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Install build dependencies
        run: |
          apt-get update
          apt-get install -y g++ pkg-config libgtkmm-4.0-dev libsdl2-dev build-essential rpm
          
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/vcpkg
            ./build/vcpkg_installed
            ${{ env.HOME }}/.cache/vcpkg/archives
            ${{ env.XDG_CACHE_HOME }}/vcpkg/archives
            ${{ env.LOCALAPPDATA }}\vcpkg\archives
            ${{ env.APPDATA }}\vcpkg\archives
          key: ${{ runner.os }}-${{ matrix.compiler }}-${{ env.BUILD_TYPE }}-${{ hashFiles('**/CMakeLists.txt') }}-${{ hashFiles('./vcpkg.json')}}
          restore-keys: |
            ${{ runner.os }}-${{ env.BUILD_TYPE }}-

      - name: Setup Cpp
        uses: aminya/setup-cpp@v1
        with:
          compiler: ${{ matrix.compiler }}
          vcvarsall: ${{ contains(matrix.os, 'windows') }}
          cmake: true
          ninja: true
          vcpkg: true
          cppcheck: true
          clangtidy: true # instead of `true`, which chooses the default version, you can pass a specific version.

      - name: Build
        run: |
          make build
          
      - name: Get version from tag
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/v}

      - name: Package Debian (deb)
        run: |
          mkdir -p debian/ffdstudio/DEBIAN
          echo "Package: ffdstudio" > debian/ffdstudio/DEBIAN/control
          echo "Version: ${{ steps.get_version.outputs.VERSION }}" >> debian/ffdstudio/DEBIAN/control
          echo "Architecture: amd64" >> debian/ffdstudio/DEBIAN/control
          mkdir -p debian/ffdstudio/usr/bin
          cp ffdstudio debian/ffdstudio/usr/bin/
          dpkg-deb --build debian/ffdstudio .
          ls
          
      - name: Package RPM (rpm)
        run: |
          mkdir -p "rpm/ffdstudio-${{steps.get_version.outputs.VERSION}}/usr/bin"
          cp ffdstudio "rpm/ffdstudio-${{steps.get_version.outputs.VERSION}}/usr/bin/ffdstudio"
          export RPM_BUILD_ROOT="$(pwd)/rpm/BUILD"
          cat << EOF > rpm/ffdstudio.spec
          Name: ffdstudio
          Version: ${{steps.get_version.outputs.VERSION}}
          Release: 1%{?dist}
          Summary: Description of your package

          Group: Applications/Multimedia
          License: GPL
          URL: http://example.com
          Source0: %{name}-%{version}.tar.gz

          BuildArch: x86_64

          %description
          Description of your package

          %prep
          %autosetup

          %build
          # Add build commands here

          %install
          mkdir -p %{buildroot}/usr/bin
          cp -r usr/bin/ffdstudio %{buildroot}/usr/bin/

          %files
          %defattr(-,root,root,-)
          /usr/bin/ffdstudio

          %changelog
          - Initial package

          EOF
          tar czf rpm/ffdstudio-${{steps.get_version.outputs.VERSION}}.tar.gz -C rpm "ffdstudio-${{steps.get_version.outputs.VERSION}}"
          rpmbuild -bb --define "_topdir $(pwd)/rpm" --define "_builddir $RPM_BUILD_ROOT" --define "_rpmdir $(pwd)/rpm/RPMS" --define "_sourcedir $(pwd)/rpm" --define "_specdir $(pwd)/rpm" --define "_srcrpmdir $(pwd)/rpm/SRPMS" rpm/ffdstudio.spec
          
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Release ${{ github.ref }}
          draft: false
          prerelease: false
        continue-on-error: true          

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ./ffdstudio_${{ steps.get_version.outputs.VERSION }}_amd64.deb
            ./ffdstudio-${{ steps.get_version.outputs.VERSION }}-1.x86_64.rpm
            ./ffdstudio
          token: ${{ secrets.GITHUB_TOKEN }}
